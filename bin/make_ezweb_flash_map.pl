use strict;
use warnings;
use WWW::MobileCarrierJP::EZWeb::DeviceID;
use WWW::MobileCarrierJP::EZWeb::Model;
use Data::Dumper;
use FindBin;

my $TMPL = <<'...';
package HTTP::MobileAgent::Flash::EZWebFlashMap;
# -------------------------------------------------------------------------
# This file is autogenerated by ./make_ezweb_map.pl
# in HTTP-MobileAgent-Flash distribution
# -------------------------------------------------------------------------
use strict;
use warnings;

require Exporter;
use base qw(Exporter);
our @EXPORT_OK = qw($FLASH_MAP);
our $FLASH_MAP;

BEGIN {
    if ($ENV{EZWEB_FLASH_MAP}) {
        eval q{
            require YAML::Syck;
            $FLASH_MAP = YAML::Syck::LoadFile($ENV{EZWEB_FLASH_MAP});
        };
        if ($@) {
            eval q{
                require YAML;
                $FLASH_MAP = YAML::LoadFile($ENV{EZWEB_FLASH_MAP});
            };
        }
        warn "using normal hash map: $@" if $@;
    }
}

$FLASH_MAP ||= %s;

1;
...

&main;exit;

sub main {
    my $overwrite = $ARGV[0] && $ARGV[0] eq '-o';

    my $fh;
    if ($overwrite) {
        open $fh, ">",  File::Spec->catfile($FindBin::Bin, qw/.. lib HTTP MobileAgent Flash EZWebFlashMap.pm/) or die $!;
        select $fh;
    }
    $Data::Dumper::Indent = 1;
    $Data::Dumper::Terse  = 1;
    $Data::Dumper::Sortkeys = 1;

    printf $TMPL, Dumper(_mk_data());

    if ($overwrite) {
        close $fh;
    }
}

sub _mk_data {
    my $result;
    my $device_map = +{ map { $_->{model} => $_->{device_id} } @{ WWW::MobileCarrierJP::EZWeb::DeviceID->scrape() } };

    for my $model (@{WWW::MobileCarrierJP::EZWeb::Model->scrape()}) {
        if (my $device_id = $device_map->{$model->{model_long}}) {
            if (ref $device_id eq 'ARRAY') {
                for my $id (@$device_id) {
                    $result->{$id} = $model->{flash_lite};
                }
            } else {
                $result->{$device_id} = $model->{flash_lite};
            }
        } else {
            die "unknown model name: $model->{model_long}";
        }
    }

    return $result;
}

